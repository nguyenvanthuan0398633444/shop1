@model ShopWebApplication.Models.Account
@using ShopWebApplication.Models

@{
    ViewBag.Title = "NewAccount";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
    IEnumerable<Account_type> lstAccountType = (IEnumerable<Account_type>)ViewBag.AccountType;
}
<h2>New Account</h2>

@using (Html.BeginForm("NewAccount", "Accout", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group productNew">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            @if (ViewBag.error != null)
            {
                <p style="color: red;">@ViewBag.error</p>
            }
        </div>
    </div>

    <div class="form-group productNew">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group productNew">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group productNew">
        <label class="col-md-2">Account Type</label>
        <div class="col-md-10">
            @for (int i = 0; i < lstAccountType.Count(); i++)
            {               
                <input type="radio" id="IDAccountType"  value="@lstAccountType.ElementAt(i).ID" name="IDAccountType" /><label class="col-md-3">@lstAccountType.ElementAt(i).Name</label>                
            }
        </div>
    </div>
    <div class="form-group productNew">
        @Html.LabelFor(model => model.PhotoPath, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-10">
            <input name="PhotoPath" type="file" />
            <span>@ViewBag.upload</span>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="button" class="btn btn-secondary">@Html.ActionLink("Back to List", "Index")</button>
            <input type="submit" value="SAVE" class="btn btn-success" />
        </div>
    </div>
</div>
}


